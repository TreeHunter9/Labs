#include <iostream>
#include <vector>
#include <array>
#include "graph.h"

int main(int, char**) 
{
	const int nodes_number = 12;

	const Node nodes_map[nodes_number] = {
		{1, {{2, 2}}},
		{2, {{3, 4}, {8, 1}, {11, 7}}},
		{3, {{4, 3}}},
		{4, {{5, 8}, {6, 1}}},
		{5, {}},
		{6, {{7, 3}}},
		{7, {{12, 4}}},
		{8, {{9, 5}}},
		{9, {{10, 2}}},
		{10, {{12, 5}}},
		{11, {{10, 5}}},
		{12, {{4, 3}}}
	};

	const int raw_map[nodes_number][nodes_number] = {
	   /*1	2  3  4	 5	6  7  8  9  10 11 12*/
		{0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},// 1
		{0, 0, 4, 0, 0, 0, 0, 1, 0, 0, 7, 0},// 2
		{0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0},// 3
		{0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 0, 0},// 4
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},// 5
		{0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0},// 6
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4},// 7
		{0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0},// 8
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0},// 9
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5},// 10
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0},// 11
		{0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0} // 12
	};

	Graph<nodes_number> graph(nodes_map);
	std::vector<int> path = graph.FindShortesPath(1, 12);
	graph_util::PrintPath(path);
}